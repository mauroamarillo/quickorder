/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.DataTypes.DataIndividual;
import Logica.DataTypes.DataProdPromo;
import Logica.DataTypes.DataRestaurante;
import java.awt.Image;
import java.io.File;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import static javax.swing.JFileChooser.APPROVE_OPTION;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jean
 */
public class RegistroPromocion extends javax.swing.JInternalFrame {

    QuickOrder ventanaPrincipal;

    DefaultTableModel modelo;
    File foto;
    HashMap subProductos = new HashMap();
    String restaurante = new String();

    public RegistroPromocion(QuickOrder vp) {
        this.ventanaPrincipal = vp;

        initComponents();
        try {
            cargarRestaurantes();
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPromocion.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpiarTabla();
        this.setLocation(220, 80);
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setVisible(true);
    }

    private void cargarRestaurantes() throws SQLException {
        HashMap OBJs = ventanaPrincipal.CU.getDataRestaurantes();
        Iterator it = OBJs.entrySet().iterator();
        DefaultListModel model = new DefaultListModel();
        while (it.hasNext()) {
            Map.Entry entry = (Map.Entry) it.next();
            DataRestaurante R = ((DataRestaurante) entry.getValue());
            model.addElement(R.getNickname());
        }
        ListaRestaurante.setModel(model);
    }

    private void cargarProductos(String R, String filtro) throws SQLException, ClassNotFoundException {
        if (!R.isEmpty()) {
            HashMap OBJs = ventanaPrincipal.CU.buscarRestaurante(R).getIndividuales();
            Iterator it = OBJs.entrySet().iterator();
            DefaultListModel model = new DefaultListModel();
            while (it.hasNext()) {
                Map.Entry entry = (Map.Entry) it.next();
                DataIndividual I = ((DataIndividual) entry.getValue());
                if (filtro == null || filtro.isEmpty()) {
                    model.addElement(I.getNombre());
                } else {
                    if (I.getNombre().contains(filtro)) {
                        model.addElement(I.getNombre());
                    }
                }
            }
            ListaSubProducto.setModel(model);
        }
    }

    private void limpiarTabla() {
        modelo = (DefaultTableModel) TablaSubProductos.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        subProductos.clear();
    }

    private void borrarLineaProducto() {
        int selectedRow = TablaSubProductos.getSelectedRow();
        if (selectedRow > -1) {
            DefaultTableModel tm = (DefaultTableModel) TablaSubProductos.getModel();
            String nom = String.valueOf(tm.getValueAt(TablaSubProductos.getSelectedRow(), 0));
            String nick = (String) ListaRestaurante.getSelectedValue();
            subProductos.remove(nick + "_" + nom);
            modelo.removeRow(selectedRow);
        }
    }

    private void agregarLineaProducto(DataIndividual I) {
        if (subProductos.get(I.getRestaurante() + "_" + I.getNombre()) != null) {
            JOptionPane.showMessageDialog(null, "El producto ya esta agregado", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                int cant = Integer.parseInt(JOptionPane.showInputDialog("Ingrese Cantidad"));
                modelo.addRow(new Object[]{I.getNombre(), cant});
                subProductos.put(I.getRestaurante() + "_" + I.getNombre(), new DataProdPromo(cant, I));
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Cantidad invalida", "ENTRADA INCORRECTA", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        MenuTabla = new javax.swing.JPopupMenu();
        menuEliminar = new javax.swing.JMenuItem();
        Text_Nombre = new javax.swing.JTextField();
        Text_Descripcion = new javax.swing.JTextField();
        Text_Descuento = new javax.swing.JTextField();
        Text_Filtro_Restaurante = new javax.swing.JTextField();
        Text_Filtro_Producto = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaRestaurante = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Label_Img = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Button_Aceptar = new javax.swing.JButton();
        Button_Cancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaSubProducto = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaSubProductos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jFileChooser1.setFileFilter(new FileNameExtensionFilter("Imagenes jpg ", "jpg"));
        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\Jean\\Pictures"));

        menuEliminar.setText("Quitar Producto");
        menuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarActionPerformed(evt);
            }
        });
        MenuTabla.add(menuEliminar);

        setClosable(true);
        setTitle("Registro Promocion");
        setMaximumSize(new java.awt.Dimension(615, 455));
        setMinimumSize(new java.awt.Dimension(615, 455));
        setPreferredSize(new java.awt.Dimension(615, 455));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        Text_Descuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Text_DescuentoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Text_DescuentoKeyTyped(evt);
            }
        });

        Text_Filtro_Restaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text_Filtro_RestauranteActionPerformed(evt);
            }
        });
        Text_Filtro_Restaurante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Text_Filtro_RestauranteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Text_Filtro_RestauranteKeyTyped(evt);
            }
        });

        Text_Filtro_Producto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Text_Filtro_ProductoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Text_Filtro_ProductoKeyTyped(evt);
            }
        });

        ListaRestaurante.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListaRestaurante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaRestauranteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListaRestaurante);

        jLabel1.setText("Nombre: ");

        jLabel2.setText("Descripcion:");

        jLabel3.setText("Descuento:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Restaurante -> ");

        Label_Img.setBackground(new java.awt.Color(45, 245, 245));
        Label_Img.setFont(new java.awt.Font("High Tower Text", 0, 24)); // NOI18N
        Label_Img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_Img.setText("Seleccionar Imagen");
        Label_Img.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Label_Img.setMaximumSize(new java.awt.Dimension(190, 190));
        Label_Img.setMinimumSize(new java.awt.Dimension(190, 190));
        Label_Img.setPreferredSize(new java.awt.Dimension(190, 190));
        Label_Img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_ImgMouseClicked(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Filtrar Restaurante: ");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Seleccionar");

        Button_Aceptar.setText("Aceptar");
        Button_Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_AceptarActionPerformed(evt);
            }
        });

        Button_Cancelar.setText("Cancelar");
        Button_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_CancelarActionPerformed(evt);
            }
        });

        ListaSubProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaSubProductoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListaSubProducto);

        TablaSubProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaSubProductos.setComponentPopupMenu(MenuTabla);
        TablaSubProductos.getTableHeader().setReorderingAllowed(false);
        TablaSubProductos.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                TablaSubProductosInputMethodTextChanged(evt);
            }
        });
        jScrollPane3.setViewportView(TablaSubProductos);
        if (TablaSubProductos.getColumnModel().getColumnCount() > 0) {
            TablaSubProductos.getColumnModel().getColumn(0).setResizable(false);
            TablaSubProductos.getColumnModel().getColumn(1).setResizable(false);
            TablaSubProductos.getColumnModel().getColumn(1).setPreferredWidth(2);
        }

        jLabel5.setText("Filtrar Productos:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Seleccionar");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Producto -> ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(47, Short.MAX_VALUE)
                        .addComponent(Button_Aceptar)
                        .addGap(240, 240, 240))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(26, 26, 26))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Text_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Text_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Text_Descuento, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Text_Filtro_Restaurante)
                                    .addComponent(Text_Filtro_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Label_Img, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Button_Cancelar))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_Img, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Text_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Text_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Text_Descuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Text_Filtro_Restaurante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Text_Filtro_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_Aceptar)
                    .addComponent(Button_Cancelar))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Text_Filtro_RestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text_Filtro_RestauranteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Text_Filtro_RestauranteActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        ventanaPrincipal.setOperando(false);
        this.dispose();
    }//GEN-LAST:event_formInternalFrameClosing

    private void Button_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_CancelarActionPerformed
        ventanaPrincipal.setOperando(false);
        this.dispose();
    }//GEN-LAST:event_Button_CancelarActionPerformed

    private void Button_AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_AceptarActionPerformed
        try {
            float desc = Float.parseFloat(Text_Descuento.getText());
            ventanaPrincipal.CU.getCP().insertarPromocion(Text_Nombre.getText(), Text_Descripcion.getText(), foto, true, desc, ListaRestaurante.getSelectedValue().toString(), subProductos);
            JOptionPane.showMessageDialog(this, "Promocion Resgistrada", "- EXITO -", JOptionPane.DEFAULT_OPTION);
            ventanaPrincipal.setOperando(false);
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage(), "ERROR!", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(RegistroPromocion.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_Button_AceptarActionPerformed

    private void Label_ImgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_ImgMouseClicked
        int option = jFileChooser1.showOpenDialog(this);
        if (APPROVE_OPTION == option) {
            foto = jFileChooser1.getSelectedFile();
            String fil = jFileChooser1.getSelectedFile().getPath();
            Image img = new ImageIcon(fil).getImage();
            Image newImg;
            newImg = img.getScaledInstance(190, 190, java.awt.Image.SCALE_FAST);
            ImageIcon ico = new ImageIcon(newImg);
            Label_Img.setText("");
            Label_Img.setIcon(ico);
        }
    }//GEN-LAST:event_Label_ImgMouseClicked

    private void Text_Filtro_RestauranteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_Filtro_RestauranteKeyTyped

    }//GEN-LAST:event_Text_Filtro_RestauranteKeyTyped

    private void Text_Filtro_RestauranteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_Filtro_RestauranteKeyReleased
        HashMap OBJs = ventanaPrincipal.CU.filtrarRestaurantes(Text_Filtro_Restaurante.getText());
        Iterator it = OBJs.entrySet().iterator();
        DefaultListModel model = new DefaultListModel();
        while (it.hasNext()) {
            Map.Entry entry = (Map.Entry) it.next();
            DataRestaurante R = ((DataRestaurante) entry.getValue());
            model.addElement(R.getNickname());
        }
        ListaRestaurante.setModel(model);
    }//GEN-LAST:event_Text_Filtro_RestauranteKeyReleased

    private void TablaSubProductosInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TablaSubProductosInputMethodTextChanged

    }//GEN-LAST:event_TablaSubProductosInputMethodTextChanged

    private void menuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarActionPerformed
        borrarLineaProducto();
    }//GEN-LAST:event_menuEliminarActionPerformed

    private void ListaRestauranteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaRestauranteMouseClicked
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2) {
            restaurante = (String) list.getSelectedValue();
            try {
                cargarProductos(restaurante, Text_Filtro_Producto.getText());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR!", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(RegistroPromocion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegistroPromocion.class.getName()).log(Level.SEVERE, null, ex);
            }
            limpiarTabla();
        }
    }//GEN-LAST:event_ListaRestauranteMouseClicked

    private void ListaSubProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaSubProductoMouseClicked
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2) {
            DataIndividual DI = ventanaPrincipal.CU.getCP().buscarDataIndividual((String) list.getSelectedValue(), restaurante);
            agregarLineaProducto(DI);
        }
    }//GEN-LAST:event_ListaSubProductoMouseClicked

    private void Text_DescuentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_DescuentoKeyReleased

    }//GEN-LAST:event_Text_DescuentoKeyReleased

    private void Text_DescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_DescuentoKeyTyped
        char car = evt.getKeyChar();
        String desc = Text_Descuento.getText();
        if (Character.isDigit(car) || Character.compare(car, '.') == 0) {
            if (desc.contains(".") && Character.compare(car, '.') == 0) {
                evt.consume();
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_Text_DescuentoKeyTyped

    private void Text_Filtro_ProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_Filtro_ProductoKeyTyped

    }//GEN-LAST:event_Text_Filtro_ProductoKeyTyped

    private void Text_Filtro_ProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_Filtro_ProductoKeyReleased
        try {
            cargarProductos(restaurante, Text_Filtro_Producto.getText());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR!", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(RegistroPromocion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegistroPromocion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Text_Filtro_ProductoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Aceptar;
    private javax.swing.JButton Button_Cancelar;
    private javax.swing.JLabel Label_Img;
    private javax.swing.JList ListaRestaurante;
    private javax.swing.JList ListaSubProducto;
    private javax.swing.JPopupMenu MenuTabla;
    private javax.swing.JTable TablaSubProductos;
    private javax.swing.JTextField Text_Descripcion;
    private javax.swing.JTextField Text_Descuento;
    private javax.swing.JTextField Text_Filtro_Producto;
    private javax.swing.JTextField Text_Filtro_Restaurante;
    private javax.swing.JTextField Text_Nombre;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenuItem menuEliminar;
    // End of variables declaration//GEN-END:variables
}
