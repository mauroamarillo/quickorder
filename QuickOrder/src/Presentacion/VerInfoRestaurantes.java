/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.DataTypes.DataRestaurante;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeCellRenderer;

/**
 *
 * @author Jean
 */
public class VerInfoRestaurantes extends javax.swing.JInternalFrame {

    QuickOrder ventanaPrincipal;
    DefaultMutableTreeNode raiz = new DefaultMutableTreeNode("Categorias");
    DefaultMutableTreeNode nodoCategoria;
    DefaultMutableTreeNode nodoRestaurante;
    HashMap Categorias;

    public VerInfoRestaurantes(QuickOrder vp) throws SQLException {
        this.ventanaPrincipal = vp;
        this.Categorias = ventanaPrincipal.CU.getCategorias();
        initComponents();
        cargarArbol();
        this.setLocation(220, 80);
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setVisible(true);

    }

    private void cargarArbol() {
        /*Guardo las categorias en la lista de categorias*/
        Iterator it = Categorias.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry entry = (Map.Entry) it.next();
            String nombreCategoria = (String) entry.getValue();
            nodoCategoria = new DefaultMutableTreeNode(nombreCategoria);    // creo un nodo con el nombreCategoria
            HashMap rest = ventanaPrincipal.CU.consultarRestaurantesPorCategoria(nombreCategoria);  // Obtengo los una lista de DATATYPEs de restaurantes 
            Iterator it2 = rest.entrySet().iterator();
            while (it2.hasNext()) {
                Map.Entry entry2 = (Map.Entry) it2.next();
                DataRestaurante R = (DataRestaurante) entry2.getValue();
                nodoRestaurante = new DefaultMutableTreeNode(R);        // creo un nodo por cada datatype obtenido
                nodoRestaurante.setAllowsChildren(false);               // estos nodos no pueden tener nodos anidados, esto lo uso despues para saber cual nodo es de un restaurante y cual no
                nodoCategoria.add(nodoRestaurante);                     // agrego cada nodo restaurante al nodo de la categoria que encontre
            }
            raiz.add(nodoCategoria);                                    // agrego cada categoria al nodo raiz
        }
        DefaultTreeModel modelo = new DefaultTreeModel(raiz);           // creo un modelo para el arbol y le asigno el nodo raiz con todos sus hijos
        this.ArbolRestaurantes.setModel(modelo);                        // seteo al modelo al arbol
        TreeCellRenderer renderer = new RestaurantesCellRenderer();     // creo un TreeCellRenderer del tipo arbol (ver clase: RestaurantesCellRenderer)
        ArbolRestaurantes.setCellRenderer(renderer);                    // asigno el RestaurantesCellRenderer
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        ArbolRestaurantes = new javax.swing.JTree();
        panelInfoRest2 = new Presentacion.PanelInfoRest();

        jFileChooser1.setFileFilter(new FileNameExtensionFilter("Imagenes jpg ", "jpg"));

        setClosable(true);
        setTitle("Informacion Restaurante");
        setMaximumSize(new java.awt.Dimension(700, 470));
        setMinimumSize(new java.awt.Dimension(700, 470));
        setPreferredSize(new java.awt.Dimension(700, 470));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(180, 280));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(180, 280));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(180, 280));

        ArbolRestaurantes.setMaximumSize(null);
        ArbolRestaurantes.setMinimumSize(null);
        ArbolRestaurantes.setPreferredSize(null);
        ArbolRestaurantes.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                ArbolRestaurantesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ArbolRestaurantes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInfoRest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelInfoRest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        ventanaPrincipal.setOperando(false);
        this.dispose();
    }//GEN-LAST:event_formInternalFrameClosing

    private void ArbolRestaurantesValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_ArbolRestaurantesValueChanged
        DefaultMutableTreeNode x = (DefaultMutableTreeNode) evt.getNewLeadSelectionPath().getLastPathComponent();
        if (x.getAllowsChildren() == false) {
            try {
                panelInfoRest2.cargarInfo((DataRestaurante) x.getUserObject());
            } catch (MalformedURLException ex) {
                Logger.getLogger(VerInfoRestaurantes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ArbolRestaurantesValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree ArbolRestaurantes;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private Presentacion.PanelInfoRest panelInfoRest2;
    // End of variables declaration//GEN-END:variables
}
