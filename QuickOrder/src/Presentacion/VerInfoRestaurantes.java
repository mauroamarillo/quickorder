/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.Categoria;
import Logica.Restaurante;
import java.awt.Image;
import java.io.File;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import static javax.swing.JFileChooser.APPROVE_OPTION;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Jean
 */
public class VerInfoRestaurantes extends javax.swing.JInternalFrame {

    QuickOrder ventanaPrincipal;
    DefaultMutableTreeNode raiz = new DefaultMutableTreeNode("Categorias");
    DefaultMutableTreeNode nodoCategoria;
    DefaultMutableTreeNode nodoRestaurante;
    HashMap Categorias;

    public VerInfoRestaurantes(QuickOrder vp) throws SQLException {
        this.ventanaPrincipal = vp;
        this.Categorias = ventanaPrincipal.CU.getCategorias();
        initComponents();
        cargarArbol();
        this.setLocation(220, 80);
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setVisible(true);

    }

    private void cargarArbol() {
        Iterator it = Categorias.entrySet().iterator();
        HashMap r = new HashMap();        
        while (it.hasNext()) {
            Map.Entry entry = (Map.Entry) it.next();
            String nombreCategoria = (String) entry.getValue();
            nodoCategoria = new DefaultMutableTreeNode(nombreCategoria);
                HashMap rest = ventanaPrincipal.CU.consultarRestaurantesPorCategoria(new Categoria(nombreCategoria));
                Iterator it2 = rest.entrySet().iterator();
                while(it2.hasNext()){                     
                    Map.Entry entry2 = (Map.Entry) it2.next();
                    //JOptionPane.showMessageDialog(null, ex.getMessage(), "!ERROR¡", JOptionPane.ERROR_MESSAGE);
                     Restaurante R = (Restaurante) entry2.getValue();
                     nodoRestaurante = new DefaultMutableTreeNode(R.getNickname()+" - "+ R.getNombre());
                     nodoRestaurante.setAllowsChildren(false);
                     nodoCategoria.add(nodoRestaurante);
                }
            raiz.add(nodoCategoria);
        }       
        DefaultTreeModel modelo = new DefaultTreeModel(raiz);

        this.jTree1.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        panelInfoRest2 = new Presentacion.PanelInfoRest();

        jFileChooser1.setFileFilter(new FileNameExtensionFilter("Imagenes jpg ", "jpg"));

        setClosable(true);
        setTitle("Registro Producto Individual");
        setMaximumSize(new java.awt.Dimension(700, 470));
        setMinimumSize(new java.awt.Dimension(700, 470));
        setPreferredSize(new java.awt.Dimension(700, 470));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(180, 280));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(180, 280));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(180, 280));

        jTree1.setMaximumSize(null);
        jTree1.setMinimumSize(null);
        jTree1.setPreferredSize(null);
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInfoRest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelInfoRest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        ventanaPrincipal.setOperando(false);
        this.dispose();
    }//GEN-LAST:event_formInternalFrameClosing

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
      //  if(){
       DefaultMutableTreeNode x = (DefaultMutableTreeNode) evt.getNewLeadSelectionPath().getLastPathComponent();
      if (x.getAllowsChildren() == false){
          panelInfoRest2.cargarInfo( ventanaPrincipal.CU.buscarRestaurantePorNick_Nombre(evt.getNewLeadSelectionPath().getLastPathComponent().toString()));
      }// JOptionPane.showMessageDialog(this, evt.getNewLeadSelectionPath().getLastPathComponent(), "!ERROR¡", JOptionPane.ERROR_MESSAGE);
      //  }
    }//GEN-LAST:event_jTree1ValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    private Presentacion.PanelInfoRest panelInfoRest2;
    // End of variables declaration//GEN-END:variables
}
